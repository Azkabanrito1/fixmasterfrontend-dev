export const jobs = {
  banks: {
    addBankAccount: "Bank/CreateUserBankDetails",
    getBankAccounts: "Bank/GetUserBankDetails",
    getBankDetailsByCollab: "Bank/GetBankDetailsByCollaborator",
    respondToBankDetails: "Bank/ApproveOrRejectBankDetails",
  },
  jobs: {
    // customer jobs actions
    acknowledgeCompletion: "Jobs/AcknowledgeCompletion",
    customerSubscriptions: "Jobs/GetCustomerActiveSubscription",
    bookJobWithSub: "Jobs/PayJobFixWithSubscriptionPlan",
    bookNewJob: "Jobs/newfixrequest",
    customerNewJobs: "Jobs/GetCustomerNewJobs",
    customerOngoingJobs: "Jobs/GetCustomerOngoingJobs",
    customerCompletedJobs: "Jobs/GetCustomerCompletedJobs",
    bookingFee: "Jobs/GetFixBookingFeeByFixId",
    cancelFix: "Jobs/CancelFix",
    closeDiagnosisVisit: "Jobs/CloseDiagnosisVisit",
    jobsWithHireRequest: "Jobs/GetJobsWithHiredEquipmentsRequest",
    deleteJobWithHireRequest: "Equipment/RemoveAwaitingHireEquipment",
    updateFix: "Jobs/UpdateFixLog",
    logCompletionStartTime: "Jobs/LogCompletionStartTime",
    logCompletionEndTime: "Jobs/LogCompletionEndTime",
    getCompletionStartEndStatus: "Jobs/GetCompletionStartEndStatus",

    // cse and franchisee
    getCseUnacceptedJobs: "Jobs/GetAllCseUnAcceptedJobs",
    getFranchiseeAndCseForWarrantyAndCompleted:
      "Jobs/GetFranchiseeAndCseJobsByStatus/",
    getJobDetails: "Jobs/GetFixDetails",
    acceptOrRejectJob: "Jobs/AcceptOrRejectJobFix",
    getJobCount: "Jobs/GetCountFixLogByStatus/",
    getFranchiseAndCseRejectedJob: "Jobs/GetFranchiseeAndCseRejectedJobs",
    getFranchiseAndCseOngoingJob: "Jobs/GetFranchiseeAndCseOngoingJobs",
    getAllFixEquipment: "Jobs/GetAllFixEquipmentsByCategoryId",
    setJobVisitDate: "Jobs/SetCompletionVisit",
    logCompletionObservation: "Jobs/LogCompletionObservation",
    updateCategory: "Jobs/UpdateJobFixCategory",
    addEquipment: "Jobs/AddCustomerFixEquipment",
    getFixEquipment: "Jobs/GetCustomerFixEquipmentsByFixId/",
    createServices: "Jobs/createfixservice",
    getService: "Jobs/GetCustomerFixServicesByFixId/",
    getUnassignedJobs: "Jobs/GetAllUnAssignedJobs",
    assignJobsToCse: "Jobs/AssignJobFixToCSE",
    assignJobsToSelf: "Jobs/AssignJobFixToSelf",
    deleteItemToFix: "Jobs/RemoveFixItemWithServices",
    deleteService: "Jobs/RemoveItemServices",

    // technician
    technicianMyJobs: "Jobs/GetMyJobsTechnician",
    technicianUnacceptedJobs: "Jobs/GetAllTechnicianUnAcceptedJobs",
    technicianRejectedJobs: "Jobs/GetTechnicianRejectedJobs",
    technicianOngoingJobs: "Jobs/GetTechnicianOngoingJobs",
    technicianJobByStatus: "Jobs/GetTechnicianJobsByStatus/",
  },
  values: {
    fix: "Values/GetJobFixTypes",
    fixClasses: "FixClasses/GetFixClasses",
    fixCategories: "Values/GetJobFixCategories",
    serviceRatingParams: "Values/GetServiceRating",
    getMeasurementsUnit: "Values/GetUnitOfMeasurements",
    getBankNames: "https://api.paystack.co/bank?country=nigeria",
  },

  technician: {
    getAllTechnicians: "Technician/GetAllTechnicians",
    assignJobsToTechnician: "Technician/AssignJobToTechnician",
    getTechnicianAssignByFixId: "Technician/GetTechnicianAssignedToJob",
    showJobInterest: "Technician/ShowInterestInJob/fixId?fixId=",
    getTechnicianNewJob: "Technician/GetNewJobs",
  },
  diagnosis: {
    setDiagnoisiVisit: "Diagnosis/SetDiagnosisVisit",
    getDiagnosisTime: "Diagnosis/GetDiagnosisDefaultTime",
    getExtendedDiagnosisTime: "Diagnosis/GetAllDiagnosisTime",
    extendDiagnosisTime: "Diagnosis/ExtendDiagnosisTime",
    createRecommendationAndFinding:
      "Diagnosis/CreateDiagnosisIssuesAndRecommendation",
    getIssueAndRecommendationByFixId: "Diagnosis/GetDiagnosisReportByFixId/",
    checkDiagnosis: "Diagnosis/CheckDiagnosisExists",
    logDiagStartTime: "Diagnosis/LogDiagnosisStartTime",
    logDiagEndTime: "Diagnosis/LogDiagnosisEndTime",
    diagnosisLogStatus: "Diagnosis/GetDiagnosisStartEndStatus",
    getDiagnosisVisitTime: "Diagnosis/GetDiagnosisVisit?FixId=",
  },
  warranty: {
    getWarrantyJob: "Warranty/GetWarrantyClaimDetails/",
    logWarrantyClaim: "Warranty/LogWarrrantyClaimObservation",
  },
  supplies: {
    supplyRequest: "Supply/AddFixSupplies",
    getSupplyByFixId: "Supply/GetSuppliesRequestsByFixId",
    getSupplyRfq: "/Supply/GetNewRfq",
    createQuotation: "Supply/SubmitSuppliesRequestResponse",
    getNewPurchaseOrder: "Supply/GetNewPoPendingAcknowledgement",
    acceptOrRejetPO: "Supply/acceptorrejectpo",
    getPurchaseOrderByStatus: "Supply/GetPoByStatus",
    recordDispatch: "Supply/LogSuppliesDipatched ",
    getSuppliesDispatchByFixId: "Supply/GetSuppliesDispatched",
    confirmDeliveryCode: "Supply/ReceiveItemSupply",
    acceptOrRejectDelivery: "Supply/AcceptOrRejectItemSupply",
    getReplacementByStatus: "Supply/GetSuppliesReplacementsByStatus",
    agreedOrDisagreeReplacements: "Supply/AgreeOrDisagreeToReplaceItemSupply",
  },
  equipment: {
    // job flow
    getHireEquipments: "Equipment/GetAllHireEquipment",

    // franchisee equipment management
    approveOrRejectRequest: "Equipment/ApproveOrRejectHiredEquipmentRequest",
    viewHireRequest: "Equipment/GetHiredEquipmentDetailsByFixId/",
    viewAllEquipments: "Equipment/GetAllEquipment",
    createEquipment: "Equipment/CreateEquipment",
    updateEqp: "Equipment/UpdateEquipmentDetails",
    hireEqp: "Equipment/HireEquipment",
    eqpActivities: "Equipment/GetAllEquipmentsActivities",
    eqpHistory: "Equipment/GetEquipmentHireHistoryById",
    deleteJobWithHireRequest: "Equipment/RemoveAwaitingHireEquipment",
    eqpDispatch: "Equipment/GetEquipmentsAwaitingDispatch",
    dispatchEqp: "Equipment/LogEquipmentDispatch",
    viewDeliveredEquipment: "Equipment/GetEquipmentsDispatched",
    acceptEqpDispatched: "Equipment/LogEquipmentDispatchedReceived",
    returnEquipment: "Equipment/LogEquipmentReturn",
  },
  collaborators: {
    getAllCse: "Collaborator/GetAllCse",
    // cse, technicians and franchisee
    getCollaboratorJobsCount: "Jobs/GetCollaboratorJobsSummary",
    // collaborator jobs
    getCollaboratorJobs: "Jobs/GetJobsByType",
  },
  qamaster: {
    getSupportRequest: "QaMaster/GetNewSupportRequests",
    responseToSupport: "QaMaster/LogQaMasterSupportRequestResponse",
    getSupportRequestByRequestId: "QaMaster/GetSupportRequestDetail/",
    creatQamasterRequest: "QaMaster/LogQaMasterSupportRequest",
    getQaResponse: "QaMaster/GetQAResponseToRequests?fixId=",
  },
  quotes: {
    quoteDetails: "Quote/getjobquote",
    allCustomerQuotes: "Quote/getjobquotes",
    acceptOrReject: "Quote/acceptorrejectquote",
    deleteMaterial: "Quote/deletematerialfromquote",
    payQuoteWithWallet: "Quote/PayFixQuotationWithWallet",
  },
  earnings: {
    getEarnings: "Earnings/GetUserEarnings",
  },

  wallet: {
    getWalletTransactions: "Wallet/GetWalletTransactions",
    bookJobWithWallet: "Wallet/PayJobFixWithWallet",
    requestWithdrawal: "Wallet/CreateWithdrawalRequest",
    getWithdrawalRequests: "Wallet/GetWalletWithdrawalRequests",
  },
  rating: {
    getCollaboratorRating: "Rating/GetRaterRateeDetails",
    createRating: "Rating/AddUsersRatings",
  },
};
