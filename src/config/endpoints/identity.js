export const identity = {
  account: {
    login: "Account/login",
    register: "Account/publicregister",
    createPwd: "Account/CreatePassword",
    resetPwd: "Account/changepassword",
    changePwd: "Account/PasswordChange",
    confirmEmail: "Account/confirmemail",
    deactivate: "Account/deactivateAccount",
    suspend: "Account/lockout",
    unsuspend: "Account/unlock",
    pwdRecovery: "Account/passwordrecorverstart",
    resendToken: "Account/ReSendVerificationToken/email?email=",
    switchAccount: "Account/SwitchAccount?UserRole=",
    userProfile: "Account/getuserprofile",
    updateProfile: "Account/profileupdate",
    userMenu: "Account/UserMenus",
    userId: "Auth/GetUser",
    userDashboard: "Account/GetUserdashboard",
    customerTypes: "Account/GetCustomerTypes",
    usersByCategory: "Account/useraccounts",
    userById: "Account/useraccount/",
    giftSub: "Account/GiftSubscriptionToCustomer",
    createFmUser: "Account/CreateFmUser",
    adminRoles: "Account/roles",
    allCollaboratorRoles: "Account/GetAllRoles",
    getUserIdCard: "Account/GetUserIdcard",
    validateGuarantor: "Account/validateguarantorid/",
    guarantorResponse: "Account/submitguarantorresponse",
    setUserLogSession: "Account/SetUserLoginLogoutSession",
    getUserLogSession: "Account/UserLoginLogoutSession",
    useReferral: "Account/GetAllReferralsByUserId",
  },
  billing: {
    newCard: "Billing/Newcard",
    getUserCards: "Billing/GetUserCards",
    updateDefaultCard: "Billing/UpdateUserCard/",
    deleteCard: "Billing/DeleteCard/",
  },
  preferences: {
    saveNotificationPreferences: "Preference/SaveNotificationPreference",
    getWorkingType: "Preference/GetAdminAssignedWorkingType",
    saveWorkingNotification: "Preference/SaveCollaboratorWorkingPreference",
    saveLocationPreference: "Preference/SaveCollaboratorLocationPreference",
    saveContact: "Preference/SaveUserContactPreference",
    saveNotifications: "Preference/SaveUserNotificationPreference",
    contactAndNotifications: "Preference/GetUserContactAndNoticePreference",
  },
  promotion: {
    getPromotions: "Promotion/GetPromotions",
    usePromotion: "Promotion/UsePromotionForNewFix",
  },
  userAddress: {
    createAddress: "UserAddress/CreateAddressOnRequest",
    createCustomerAddress: "UserAddress/CreateCustomerAddress",
    getCustomerAddress: "UserAddress/customeraddresses",
    deleteCustomerAddress: "UserAddress/customeraddresses?addid=",
    updateCustomerAddress: "UserAddress/UpdateCustomerAddress",
    addressById: "UserAddress/customeraddresses/addressId?addressId=",
    setDefaultAddress:
      "UserAddress/SetDefaultCustomerAddress/addressId?addressId=",
  },
  userManageMent: {
    viewTickets: "UserMessaging/ViewTickets",
    sendMessageToFmAdmin: "UserMessaging/SendMessageToFixmasterAdmin",
    replyTicket: "UserMessaging/ReplyTicketMessagesSent",
    ticketResponses: "UserMessaging/TicketResponses",
  },
  values: {
    getStates: "Values/states",
    getLgasByStateName: "Values/GetLga/",
    getLgasByStateId: "Values/lgas/",
    getCitiesByTerritory: "Values/cities/",
    getCitiesByLgaId: "Values/cities/lga",
    getUserRole: "Values/UserRoles",
    updateLiveAddress: "Values/UpdateCollaboratorAddress",
  },
};
